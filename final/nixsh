#!/usr/bin/env bash

__nsh__script=""
__nsh__interpreter=""
if [ $# -eq 1 ]; then
    __nsh__script=$(realpath $1)
    __nsh__interpreter=$SHELL
fi
if [ $# -eq 2 ]; then
    __nsh__script=$(realpath $2)
    __nsh__interpreter=$(which $1)
fi


getInputs() {
    #script removing first line 
    script=$(cat $1 | sed '1d')
    inst=$(nix-instantiate --parse -E "${script%%:*}:{}")
    inst=${inst%%:*}
    inst=${inst#*(}
    # get sanitized inputs a list of space-separated strings
    echo ${inst%%:*}  | sed -e 's|\?[^,}]*[},]||g' | sed -e 's|{||' | sed -e 's|,||' | sed -e 's|}||' | xargs 
}

getAttrEnv()
{
    getInputs "$1" | sed 's/\([^ ]\+\)/\1=\1;/g'
}


ARGS=()
inputs=$(getInputs $__nsh__script)
for i in $inputs; do

    value=$(printenv $i)
    if [ -n "$value" ]; then
        ARGS+=("--argstr")
        ARGS+=("$i")
        ARGS+=("$value")
    fi
done

line_to_add_expr=$(./get_nix_expr_init_line.awk $__nsh__script)
nix_expr="$(cat $__nsh__script | sed '1,/{/s/{/{ nixsh,/' | sed  "${line_to_add_expr}i\nixsh.wrapper {$(getAttrEnv $__nsh__script)} ''$__nsh__interpreter''  \\")"

if script=$(nix-build "${ARGS[@]}" --arg nixsh "import ./nixsh.nix {}"  --no-out-link -E "$nix_expr"  2>&1); then
    # get the last line of script
    script=$(echo "$script" | tail -n 1)
else
    rc=$?
    echo -e "$script" >&2
    echo -e "Error: nix-build command failed with exit code $rc. Exiting." >&2
    exit 1
fi

# Check if nix-build command failed
if [ $? -ne 0 ]; then
    echo "Error: nix-build command failed. Exiting." >&2
    exit 1
fi
exec $script

